<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_player_body</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//-----Player Logic Variables-------
global.isMoving         = false;
global.playerMouseAngle = 45;
global.playerMouseAngleLAST = 45;
global.playerImageSpeed = 0.15;
//----------------------------------

//-------DRAW variables-------------
hopVar = 0;
classSpriteVariable = spr_player_body;
//----------------------------------

//---------GENERAL STATS------------
chosenClass           = -1;

spd                   = 1;
hp_Current            = 10;
hp_Max                = 10;

sta_Max               = 10
sta_Cur               = 10;
sta_Regen_Rate        = 0.12;
sta_Regen_Start       = true;
sta_Regen_Start_time  = 30;

dmg_melee             = 1;

dmg_ranged            = 1;
canAttackRanged       = true;
range_Attack_CD       = 15;
range_Attack_Sta_Cost = 2
range_Attack_Texture  = spr_bolt;

canTakeDamage         = true
invincibleFrames      = 60;


//----------------------------------


//-----WEAPONS----------------------

//-----RANGED-----------------------
global.canAttackMelee    = true;
global.shootBoltsCD     = 20;
global.boltSpeed        = 1.5;
global.rangedDamage     = 1;
//----------------------------------


//-----MELEE------------------------
//----------------------------------



</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="5">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>sta_Regen_Start = true;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="4">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>canTakeDamage = true;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="3">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///hopVar
    if (hopVar == 0)
       hopVar = -1;
    if (hopVar == -1)
       hopVar = 0;



</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Sword timers 2
global.swordPhase1 = true;
global.swordPhase2 = false;
global.swordPhase3 = false;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Sword Timers
global.swordPhase2 = false;
global.swordPhase1 = true;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// canAttackRanged = true
canAttackRanged = true;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///MAIN STEP EVENT

//MOVEMENT SCRIPTS
script_execute(scr_KB_Movement, 0.05, 0.2, spd); //friction, speedGain, speedTop
//script_execute(scr_PAD_Movement, xaxis, yaxis, 0.5, 1 )

//CALCULATE ANGLE BETWEEN PLAYER AND CURSOR POSITION
global.playerMouseAngle = point_direction(x, y, mouse_x, mouse_y)


//PLAYER IMAGE SPEED
if (global.isMoving == false)
{
    image_speed = 0;
}
if (global.isMoving == true)
{
   image_speed = global.playerImageSpeed;
}
 
//hopVar logic
if (global.isMoving == true)
{
    hopVar = sin (get_timer() / 50000)
}
else
{
    hopVar = 0;
}



</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///SWORD ATTACK LOGIC
/*
//attack with mouse &amp; cursor
if (mouse_check_button_pressed(mb_right) &amp;&amp; global.playerStaminaCur &gt; 1 &amp;&amp; global.canSwingSword == true)
{
    instance_create(x, y, obj_sword);
    global.playerMouseAngleLAST = global.playerMouseAngle;
    global.playerStaminaCur -= global.swordStaminaCost
    if (global.playerStaminaCur &lt; 0)
    {
        global.playerStaminaCur = 0;
    }
}

//attack with directional keys
/*
if (global.playerStaminaCur &gt; 1 &amp;&amp; global.canSwingSword == true)
{
    if (keyboard_check_pressed(vk_up))
    {
        instance_create(x, y, obj_sword);
        global.playerMouseAngleLAST = global.playerMouseAngle;
        global.playerStaminaCur -= global.swordStaminaCost
        if (global.playerStaminaCur &lt; 0)
        {
            global.playerStaminaCur = 0;
        }
    }
}
*/
/*
if (mouse_check_button(mb_right) &amp;&amp; global.swordPhase1 == true)
{
   instance_create(x, y, obj_sword)
   global.swordPhase1 = false;
   global.swordPhase2 = true;
   alarm[1] = 60;
   
}
else if (mouse_check_button(mb_right) &amp;&amp; global.swordPhase2 == true)
{
   instance_create(x, y, obj_sword)
   global.swordPhase2 = false;
   global.swordPhase3 = true;
   alarm[2] = 60;
}
else if (mouse_check_button(mb_right) &amp;&amp; global.swordPhase3 == true)
{
   instance_create(x, y, obj_sword)
}

</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///RANGED COMBAT LOGIC

//Directional keys shooting
if( obj_player.sta_Cur &gt;= range_Attack_Sta_Cost )
{
    if(keyboard_check(vk_left) &amp;&amp; canAttackRanged == true)
        script_execute(scr_performAttack, obj_bolt, "left")   
    if(keyboard_check(vk_right) &amp;&amp; canAttackRanged == true)
        script_execute(scr_performAttack, obj_bolt, "right")   
    if(keyboard_check(vk_up) &amp;&amp; canAttackRanged == true)
        script_execute(scr_performAttack, obj_bolt, "up")   
    if(keyboard_check(vk_down) &amp;&amp; canAttackRanged == true)
        script_execute(scr_performAttack, obj_bolt, "down")   
}
  
//Mouse shooting
/*
if( mouse_check_button(mb_left) &amp;&amp; global.canShootBolts == true)
{
 instance_create(x + 8, y + 8, obj_bolt);
 global.canShootBolts = false;
 alarm[0] = global.shootBoltsCD;
}
*/
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///REGENS
if( sta_Cur &lt; sta_Max &amp;&amp; sta_Regen_Start == true)
{
    sta_Cur += sta_Regen_Rate
    if( sta_Cur &gt; sta_Max)
    {
        sta_Cur = sta_Max;
    }
}


</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_monster">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(canTakeDamage == true)
{
hp_Current -= other.dmg
canTakeDamage = false;
alarm[4] = invincibleFrames;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_block">
      <action>
        <libid>1</libid>
        <id>402</id>
        <kind>0</kind>
        <userelative>-1</userelative>
        <isquestion>-1</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>1</exetype>
        <functionname>action_if_collision</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>-1</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>0</kind>
            <string>hspeed</string>
          </argument>
          <argument>
            <kind>0</kind>
            <string>0</string>
          </argument>
          <argument>
            <kind>4</kind>
            <string>0</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>103</id>
        <kind>0</kind>
        <userelative>-1</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>1</exetype>
        <functionname>action_set_hspeed</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>0</kind>
            <string>0</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>402</id>
        <kind>0</kind>
        <userelative>-1</userelative>
        <isquestion>-1</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>1</exetype>
        <functionname>action_if_collision</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>-1</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>0</kind>
            <string>0</string>
          </argument>
          <argument>
            <kind>0</kind>
            <string>vspeed</string>
          </argument>
          <argument>
            <kind>4</kind>
            <string>0</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>104</id>
        <kind>0</kind>
        <userelative>-1</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>1</exetype>
        <functionname>action_set_vspeed</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>0</kind>
            <string>0</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>script_execute(scr_draw_Mover, spr_player_body, spr_shadow, hopVar);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
